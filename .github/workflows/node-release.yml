name: Node.js Release

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        description: 'npm token'
        required: true
      GIT_TOKEN:
        description: 'github personal token'
        required: true

    inputs:
      checkTest:
        type: boolean
        description: whether run test before release
        default: true

      dryRun:
        type: boolean
        description: pass dry-run to semantic-release
        default: false

      action_ref:
        type: string
        description: 'Branch name for artusjs/github-actions, for test purpose'
        default: master

jobs:
  Release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: main_repo

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      # Checkout action repository
      - name: Checkout action repository
        uses: actions/checkout@v3
        with:
          repository: artusjs/github-actions
          path: action_repo
          ref: ${{ inputs.action_ref }}

      # Checkout project repository
      - name: Checkout project repository
        uses: actions/checkout@v3
        with:
          path: main_repo
          token: ${{ secrets.GIT_TOKEN }}

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3

      # Install action dependencies
      - name: Install action dependencies
        run: npm i --no-package-lock --no-fund --omit=dev
        working-directory: action_repo/scripts/release

      # Install dependencies
      - name: Install dependencies
        run: npm i --no-package-lock --no-fund

      # Run Test Only
      - name: Run Test
        run: npm test
        if: inputs.checkTest

      - name: Semantic Release
        id: release
        run: node ../action_repo/scripts/release/index.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRYRUN: ${{ inputs.dryRun }}

      - name: Publish ${{ steps.release.outputs.name }}@${{ steps.release.outputs.release_version }}
        if: steps.release.outputs.release_version && !inputs.dryRun
        run: |
          echo ${{ steps.release.outputs.name }}
          echo ${{ steps.release.outputs.release_version }}
          echo ${{ steps.release.outputs.registry }}
